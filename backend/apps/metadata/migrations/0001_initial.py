# Generated by Django 5.0 on 2024-01-01 18:18

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Database',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.PositiveSmallIntegerField(default=0, verbose_name='№')),
                ('title', models.CharField(max_length=200, verbose_name='наименование')),
                ('struct', models.JSONField(verbose_name='структура бд')),
            ],
            options={
                'verbose_name': ('база данных',),
                'verbose_name_plural': 'базы данных',
                'ordering': ('-pos',),
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='наименование')),
            ],
            options={
                'verbose_name': ('подразделение',),
                'verbose_name_plural': 'подразделения',
            },
        ),
        migrations.CreateModel(
            name='Dictionary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='наименование')),
                ('table_name', models.CharField(max_length=50, verbose_name='имя таблицы')),
            ],
            options={
                'verbose_name': ('справочник',),
                'verbose_name_plural': 'справочники',
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.PositiveSmallIntegerField(default=0, verbose_name='№')),
                ('title', models.CharField(max_length=200, verbose_name='наименование')),
                ('field_name', models.CharField(max_length=50, verbose_name='имя поля')),
                ('field_type', models.CharField(choices=[('text', 'Простой текст без ограничений'), ('cyrillic', 'Только кириллица'), ('int', 'Целое число'), ('bigint', 'Большое целое число'), ('numeric', 'Дробное число'), ('dict', 'Справочное значение'), ('date', 'Дата'), ('time', 'Время'), ('timestamp', 'Дата и время')], max_length=15, verbose_name='тип поля')),
                ('len', models.PositiveIntegerField(default=0, verbose_name='длина')),
                ('is_key', models.BooleanField(default=False, verbose_name='ключевое поле')),
                ('is_visible', models.BooleanField(default=False, verbose_name='видимость')),
                ('is_enable', models.BooleanField(default=False, verbose_name='доступен')),
                ('is_require', models.BooleanField(default=False, verbose_name='обязательный ввод')),
                ('precision', models.PositiveIntegerField(default=0, verbose_name='точность')),
                ('is_duplicate', models.BooleanField(default=False, verbose_name='создать дубликат')),
                ('dictionary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, to='metadata.dictionary', verbose_name='справочник')),
            ],
            options={
                'verbose_name': ('поле',),
                'verbose_name_plural': 'поля',
            },
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.PositiveSmallIntegerField(default=0, verbose_name='№')),
                ('title', models.CharField(max_length=200, verbose_name='наименование')),
                ('form_type', models.CharField(choices=[('input_form', 'Форма для ввода информации'), ('search_form', 'Форма для поиска информации')], max_length=15, verbose_name='тип формы')),
                ('db', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='forms', to='metadata.database', verbose_name='база данных')),
            ],
            options={
                'verbose_name': ('форма',),
                'verbose_name_plural': 'формы',
                'ordering': ('-pos',),
            },
        ),
        migrations.CreateModel(
            name='FindField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.PositiveSmallIntegerField(default=0, verbose_name='№')),
                ('title', models.CharField(max_length=200, verbose_name='наименование')),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='metadata.field', verbose_name='поле')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='find_fields', to='metadata.form', verbose_name='форма')),
            ],
            options={
                'verbose_name': ('поле для поиска',),
                'verbose_name_plural': 'поля для поиска',
                'ordering': ('-pos',),
            },
        ),
        migrations.CreateModel(
            name='Converter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.PositiveSmallIntegerField(default=0, verbose_name='№')),
                ('title', models.CharField(max_length=200, verbose_name='наименование')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='json')),
                ('db', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='converters', to='metadata.database', verbose_name='база данных')),
                ('form', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, to='metadata.form', verbose_name='форма')),
            ],
            options={
                'verbose_name': ('конвертор',),
                'verbose_name_plural': 'конверторы',
                'ordering': ('-pos',),
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.PositiveSmallIntegerField(default=0, verbose_name='№')),
                ('title', models.CharField(max_length=200, verbose_name='наименование')),
                ('is_multy', models.BooleanField(default=False, verbose_name='мультигруппа')),
                ('table_name', models.CharField(max_length=50, verbose_name='имя таблицы')),
                ('form', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='groups', to='metadata.form', verbose_name='форма')),
            ],
            options={
                'verbose_name': ('группа',),
                'verbose_name_plural': 'группы',
            },
        ),
        migrations.AddField(
            model_name='field',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='fields', to='metadata.group', verbose_name='группа'),
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pos', models.PositiveSmallIntegerField(default=0, verbose_name='№')),
                ('title', models.CharField(max_length=200, verbose_name='наименование')),
                ('template', models.FileField(blank=True, null=True, upload_to='templates/', verbose_name='шаблон')),
                ('data', models.JSONField(blank=True, null=True, verbose_name='json')),
                ('db', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='reports', to='metadata.database', verbose_name='база данных')),
            ],
            options={
                'verbose_name': ('отчет',),
                'verbose_name_plural': 'отчеты',
                'ordering': ('-pos',),
            },
        ),
    ]
